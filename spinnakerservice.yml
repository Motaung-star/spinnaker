apiVersion: spinnaker.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker
spec:
  spinnakerConfig:
    config:
      version: $SPINNAKER_VERSION   # the version of Spinnaker to be deployed
      persistentStorage:
        persistentStoreType: s3
        s3:
          bucket: $S3_BUCKET
          rootFolder: front50
          region: $AWS_REGION
          accessKeyId: $AWS_ACCESS_KEY_ID
          secretAccessKey: $AWS_SECRET_ACCESS_KEY
      deploymentEnvironment:
        sidecars:
          spin-clouddriver:
          - name: token-refresh
            dockerImage: quay.io/skuid/ecr-token-refresh:latest
            mountPath: /etc/passwords
            configMapVolumeMounts:
            - configMapName: token-refresh-config
              mountPath: /opt/config/ecr-token-refresh
      features:
        artifacts: true
      artifacts:
        github:
          enabled: true
          accounts:
          - name: $GITHUB_USER
            token: $GITHUB_TOKEN  # GitHub's personal access token. This fields supports `encrypted` references to secrets.
      providers:
          dockerRegistry:
            enabled: true
          kubernetes:
            enabled: true
            accounts:
            - name: spinnaker-workshop
              requiredGroupMembership: []
              providerVersion: V2
              permissions:
              dockerRegistries:
                - accountName: my-ecr-registry
              configureImagePullSecrets: true
              cacheThreads: 1
              namespaces: [spinnaker,detail]
              omitNamespaces: []
              kinds: []
              omitKinds: []
              customResources: []
              cachingPolicies: []
              oAuthScopes: []
              onlySpinnakerManaged: false
              kubeconfigFile: kubeconfig-sp  # File name must match "files" key
            primaryAccount: spinnaker-workshop  # Change to a desired account from the accounts array
    profiles:
        clouddriver:
          dockerRegistry:
            enabled: true
            primaryAccount: my-ecr-registry
            accounts:
            - name: my-ecr-registry
              address: https://$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
              username: AWS
              passwordFile: /etc/passwords/my-ecr-registry.pass
              trackDigests: true
              repositories:
              - $ECR_REPOSITORY
        igor:
          docker-registry:
            enabled: true
    files: 
        kubeconfig-sp: |
          apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EUXdOakUyTVRVeE9Wb1hEVE15TURRd016RTJNVFV4T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGxuCnJMUHpUemFWMk5vS0RmbkoyOGxnUlFWdkw3aENqRk9mWHJrUlllZzgvbmp3MHdZc2xlSFo0c1kzUVJRQlQzcGgKYlZwNXgxU0MyNXZ6WGRaUm81bnZFUHdsVmNIS0pJSDF1cnNlTXkzbWY2QUhvL1ZST0pTM0xCSjczcURxZVRrSwo3d1NNcW4xRTJmTy8vTTFHeUVrQTNTZHVVQVhNbDZNaU1yY0hYbUhyeG91ekN4aC9MTkJGejJiUDZ6SWlWSmt1ClByZ3YrRmtWOGVGR2NvVk5sSUh0d2FQMXdXOUJ3TlFXZ2ZZNktrMnRnemVwSXlDcmZacmdESFNYY2pObjBYeUwKcHQ1OEVpVXl3QURpd3ZxVU9JOVFidnFnMytXWVZGT0NydUh5US8zMTl5dU9KamZxbXpiSFdXWFlQV3NQNFl6RQpGSEcybUFFMWdGY1pVMXRqSmVjQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZOQXRBYk56eEp0WGF3bXJDREE2dHVPb0RsUzdNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFBekZveHZzcGtRTGNyRlBMRWZmM3d1bnBXUnBzTXdXMFMxU0xBMjBkbkVsZEVRV0pmTQpEUEY2OUxGb0dkd3hGTVBoUXAzZk1FbWM1ZjhhODJhRzA3V3FVcjFEODdBQkJkVUNobDYzSlhqblZpRFdoYnlDCkxGcmpzb2F2L25lcWs2MzhMUVJ4VlM3Z0RyNHVtSTBNbTdidnAwOEtBWXZlZTlucm5oaTlUZ2tGTDhqcDJaTXEKVlZCVktnTjJjWHdKMzNwWDdRQ2c1aWplUHh6YXIveVlzUWFvcHhMc1ZySG93NkhGNERYazVPMHR6NHVpd1dPaApFV3JqQUJrTUlEWmZwTitzTjF1WllNZ3hyMUhmTUtrTXllN2V3NG1oQk5ta240T3hWVjA1dUVEazh1Q2JWdGxUCnAvbkV5ZWJFU29teVdaektVQVNEL0hRUzF4UnZsOTNOMjNoLwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://3BFF72A3E30391D6ED22FEC3C40AF753.yl4.eu-west-1.eks.amazonaws.com
  name: eksworkshop-eksctl.eu-west-1.eksctl.io
contexts:
- context:
    cluster: eksworkshop-eksctl.eu-west-1.eksctl.io
    namespace: spinnaker
    user: spinnaker-token-user
  name: spinnaker
current-context: spinnaker
kind: Config
preferences: {}
users:
- name: spinnaker-token-user
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IlFTZWdfazNwdVg4N1ZpZENXcWxTb1FSaEVEa0pTNG5tNk5waEV1a094emcifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJzcGlubmFrZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoic3Bpbm5ha2VyLXdzLXNhLXRva2VuLXZoZHJjIiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InNwaW5uYWtlci13cy1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjAyYjg1YTM1LWJjYzctNDNlZS04NGJlLTdkZWQyNjgyZmRjNCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpzcGlubmFrZXI6c3Bpbm5ha2VyLXdzLXNhIn0.ta8ZteQyJxgOot-_aEA3E0QoFHbpBqxsWuNHXzHuGwq693g9AjJ-hdESw3JbcWS1uJjr-CI4cEpISNp47p3RTOJiNZGetzdugogFfkbhXDBYRxC6pCyALwMSWkJKne77QFxsFU2p47k-uAIuAf7DVGlg0J23lfx_xuTHEmInwBmNIj3_vLSwePK8i8D4CljK2fjksCJUtHeCI1Wr14AJiZC9sGjSdTHIsH6l3sZ-L4Wxm8JfEi712Z69Kk30KZ8kWY9Rcg4G-jNc6yfphrIpdTqN1xmGDsc6Wn-vCb6lb5-fMJd8UKCzgxZSAU2fNDqeTtOcr8bVdkgtJrMTtsb5qw





  # spec.expose - This section defines how Spinnaker should be publicly exposed
  expose:
    type: service  # Kubernetes LoadBalancer type (service/ingress), note: only "service" is supported for now
    service:
      type: LoadBalancer


























      