apiVersion: spinnaker.io/v1alpha2
kind: SpinnakerService
metadata:
  name: spinnaker
spec:
  spinnakerConfig:
    config:
      version: $SPINNAKER_VERSION   # the version of Spinnaker to be deployed
      persistentStorage:
        persistentStoreType: s3
        s3:
          bucket: $S3_BUCKET
          rootFolder: front50
          region: $AWS_REGION
          accessKeyId: $AWS_ACCESS_KEY_ID
          secretAccessKey: $AWS_SECRET_ACCESS_KEY
      deploymentEnvironment:
        sidecars:
          spin-clouddriver:
          - name: token-refresh
            dockerImage: quay.io/skuid/ecr-token-refresh:latest
            mountPath: /etc/passwords
            configMapVolumeMounts:
            - configMapName: token-refresh-config
              mountPath: /opt/config/ecr-token-refresh
      features:
        artifacts: true
      artifacts:
        github:
          enabled: true
          accounts:
          - name: $GITHUB_USER
            token: $GITHUB_TOKEN  # GitHub's personal access token. This fields supports `encrypted` references to secrets.
      providers:
          dockerRegistry:
            enabled: true
          kubernetes:
            enabled: true
            accounts:
            - name: spinnaker-workshop
              requiredGroupMembership: []
              providerVersion: V2
              permissions:
              dockerRegistries:
                - accountName: my-ecr-registry
              configureImagePullSecrets: true
              cacheThreads: 1
              namespaces: [spinnaker,detail]
              omitNamespaces: []
              kinds: []
              omitKinds: []
              customResources: []
              cachingPolicies: []
              oAuthScopes: []
              onlySpinnakerManaged: false
              kubeconfigFile: kubeconfig-sp  # File name must match "files" key
            primaryAccount: spinnaker-workshop  # Change to a desired account from the accounts array
    profiles:
        clouddriver:
          dockerRegistry:
            enabled: true
            primaryAccount: my-ecr-registry
            accounts:
            - name: my-ecr-registry
              address: https://$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
              username: AWS
              passwordFile: /etc/passwords/my-ecr-registry.pass
              trackDigests: true
              repositories:
              - $ECR_REPOSITORY
        igor:
          docker-registry:
            enabled: true
    files: 
        kubeconfig-sp: |
          apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeU1EUXdPVEU0TVRnek9Wb1hEVE15TURRd05qRTRNVGd6T1Zvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUFYCnAxcmJ6YmFzbTFybnJDZkhpbXNCSURDT0thL2J3dGpVMmIvVWIxeWZKSTZzdXJUMUZIN2h2dkRBWFc3UWVUakkKMWRjVmR2ZEk1NWhGbG5HZ0pUZ1NCeG82WjM3NklmaHNkYjB3djQ3ZDVhZGV6WWpLZk12dFJiYWZDZnBnR1R5VgpBVVdBQStaeTltNksyM0ZzdUxNakRGdmFoOFRxK3JDODA1dCtvNnQvcG9xNXV2T1ozdnFzdnEvRmtsQXpBS3huCjZQSTRFOHp4R0IyS2dUTXA3Q20zSGFMem1pa1V0NmdPT3YwRUovdllacU9iYzljYkhBcmo0OHlROXZJaDRuQksKVmg4YTRuWlFNZHBYZmE3QzU5em02VjBrMjMxMTgwYzNYenRZQjlMeC9LNE9RcmJvN0RBeHZ4UzNRclpERC85dApwWU0rL3pYV0NlZ2dRNktBWGg4Q0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFMWNhVjNoME5ZNUVLQ0wvSFh0NjQ4dDdlYlNNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDdVlORU4wZjlDTE16QWkrK1pYKzVyY09wZHlCTldObUlCWktvSUNqWFJNM1dZYjlBWQpGSFhYMlh2S25LY0JOK2lkcytFOW5hWkowdWxFeUZqeDcrNFJuYXFJNmlYQWhFN2wrMXp5dGxEWmExZUViUlptCndmSlRZeWErQmV5ckErT1JVVkNRcldMM1F6cEVkNWVnM3hKQTJkN0dzQWZxK2JVWEk1Y1cxSDhzMjBiWGJES2MKRFJpbFJFb3Z2aWpha3QxL0NEcGJrTWwxeUthd29oSnpBVS9SbVNXbVVSM0YvQzdNTktmblJHeTNNdGpTaWNRTQp2Q0QzY3lYYnB3eENza2JONEdmanF4VVJnQWtCdE5MMHFKMzRwcDlIbWVTSWtSQWsyN2Q5YWVlaC9sWlAwSUJQCkpSWXQzcDlrZ2N4TXBSUG1Sc3FqZTZQWm1RZS9EcVFyZ2VEQgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://FEF454E930AAFCD921168DC9E0D91707.sk1.us-west-2.eks.amazonaws.com
  name: eksworkshop-eksctl.us-west-2.eksctl.io
contexts:
- context:
    cluster: eksworkshop-eksctl.us-west-2.eksctl.io
    namespace: spinnaker
    user: spinnaker-token-user
  name: spinnaker
current-context: spinnaker
kind: Config
preferences: {}
users:
- name: spinnaker-token-user
  user:
    token: eyJhbGciOiJSUzI1NiIsImtpZCI6IlpxR3dKNlYwTWkyWG54S3ZmeXJYRkRWM1dqazB1MXFlZDNMWHdBZTFEMG8ifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJzcGlubmFrZXIiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlY3JldC5uYW1lIjoic3Bpbm5ha2VyLXdzLXNhLXRva2VuLW5wY2d4Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZXJ2aWNlLWFjY291bnQubmFtZSI6InNwaW5uYWtlci13cy1zYSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjU4ODcyMGVhLTNkMDktNGU3MC1iZWRhLWVmNTM4NDRlZGQ5MiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpzcGlubmFrZXI6c3Bpbm5ha2VyLXdzLXNhIn0.MmWnF-sCTvW8RXDzdxUoDtYU6mC0bQKMwpFoEQNlR7dZi_ioSZ1xV9TWzQ-vfP-1jU-eTZX2XRHGHIdED7R8KCoAfRGHWCwj0ktYxui5P5aJFY-mB-RGtjB2IzBGCyoFGoxIQBpJ48r8P7V152OVIcIK0L5-15NhNdQqYALzhngNExm494nLd42xVi9pyQ8mMwxZKmrsxEXF8wjdvwPMZMYLeVDhCQq_N8NapUuHK7Vu98zPp8eTojQb9tfVnpkE5D446kIqGBpKJyIOmqpqK_XHquu2Djo9UMwLAx2sHt3kld2uAjyzsiKsuHDTTcgmjlpDRgIoL1mYchX9FM7_Sg
  # spec.expose - This section defines how Spinnaker should be publicly exposed
  expose:
    type: service  # Kubernetes LoadBalancer type (service/ingress), note: only "service" is supported for now
    service:
      type: LoadBalancer